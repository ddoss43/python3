diff -Nur Python-3.3.1.orig/Lib/test/test_compileall.py Python-3.3.1/Lib/test/test_compileall.py
--- Python-3.3.1.orig/Lib/test/test_compileall.py	2013-04-06 08:41:41.000000000 +0100
+++ Python-3.3.1/Lib/test/test_compileall.py	2013-04-07 19:39:23.449157629 +0100
@@ -233,6 +233,7 @@ class EncodingTest(unittest.TestCase):
             sys.stdout = orig_stdout
 
 
+@unittest.skipUnless(support.is_resource_enabled("cmdline"), "python cmdline tests disabled")
 class CommandLineTestsBase:
     """Test compileall's CLI."""
 
diff -Nur Python-3.3.1.orig/Lib/test/test_warnings/__init__.py Python-3.3.1/Lib/test/test_warnings/__init__.py
--- Python-3.3.1.orig/Lib/test/test_warnings/__init__.py	2013-04-06 08:41:46.000000000 +0100
+++ Python-3.3.1/Lib/test/test_warnings/__init__.py	2013-04-07 19:41:25.529164545 +0100
@@ -717,6 +717,7 @@
     module = py_warnings
 
 
+@unittest.skipUnless(support.is_resource_enabled("cmdline"), "python cmdline tests disabled")
 class EnvironmentVariableTests(BaseTest):
 
     def test_single_warning(self):
@@ -762,14 +763,17 @@
                 "['ignore:Deprecaci√≥nWarning']".encode('utf-8'))
         self.assertEqual(p.wait(), 0)
 
+@unittest.skipUnless(support.is_resource_enabled("cmdline"), "python cmdline tests disabled")
 class CEnvironmentVariableTests(EnvironmentVariableTests, unittest.TestCase):
     module = c_warnings
 
+@unittest.skipUnless(support.is_resource_enabled("cmdline"), "python cmdline tests disabled")
 class PyEnvironmentVariableTests(EnvironmentVariableTests, unittest.TestCase):
     module = py_warnings
 
 
 class BootstrapTest(unittest.TestCase):
+    @unittest.skipUnless(support.is_resource_enabled("cmdline"), "python cmdline tests disabled")
     def test_issue_8766(self):
         # "import encodings" emits a warning whereas the warnings is not loaded
         # or not completely loaded (warnings imports indirectly encodings by
