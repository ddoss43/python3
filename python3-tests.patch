--- Python-3.7.4/Lib/test/test_imaplib.py~	2019-07-08 20:03:50.000000000 +0200
+++ Python-3.7.4/Lib/test/test_imaplib.py	2019-08-05 19:25:53.119629647 +0200
@@ -73,7 +73,7 @@ class TestImaplib(unittest.TestCase):
 
     def test_imap4_host_default_value(self):
         # Check whether the IMAP4_PORT is truly unavailable.
-        with socket.socket() as s:
+        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
             try:
                 s.connect(('', imaplib.IMAP4_PORT))
                 self.skipTest(
@@ -84,7 +84,7 @@ class TestImaplib(unittest.TestCase):
         # This is the exception that should be raised.
         expected_errnos = support.get_socket_conn_refused_errs()
         with self.assertRaises(OSError) as cm:
-            imaplib.IMAP4()
+            imaplib.IMAP4('0.0.0.0')
         self.assertIn(cm.exception.errno, expected_errnos)
 
 
--- Python-3.9.1/Lib/test/test_unicodedata.py~	2020-12-07 15:02:38.000000000 +0100
+++ Python-3.9.1/Lib/test/test_unicodedata.py	2021-02-06 11:25:21.864427644 +0100
@@ -11,7 +11,7 @@ from http.client import HTTPException
 import sys
 import unicodedata
 import unittest
-from test.support import open_urlresource, requires_resource, script_helper
+from test.support import open_urlresource, requires_resource, script_helper, is_resource_enabled
 
 
 class UnicodeMethodsTest(unittest.TestCase):
@@ -320,6 +320,8 @@ class NormalizationTest(unittest.TestCas
         data = [int(x, 16) for x in data.split(" ")]
         return "".join([chr(x) for x in data])
 
+    @unittest.skipUnless(is_resource_enabled('network'),
+                         'network is not enabled')
     def test_normalization(self):
         TESTDATAFILE = "NormalizationTest.txt"
         TESTDATAURL = f"http://www.pythontest.net/unicode/{unicodedata.unidata_version}/{TESTDATAFILE}"
