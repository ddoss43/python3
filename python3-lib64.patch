--- Python-3.3.1/configure.ac.orig	2013-04-18 16:31:07.244030129 +0200
+++ Python-3.3.1/configure.ac	2013-04-18 17:30:31.800622500 +0200
@@ -769,6 +769,45 @@
 MULTIARCH=$($CC --print-multiarch 2>/dev/null)
 AC_SUBST(MULTIARCH)
 
+AC_SUBST(ARCH)
+AC_MSG_CHECKING(ARCH)
+ARCH=`uname -m`
+case $ARCH in
+i?86) ARCH=i386;;
+esac
+AC_MSG_RESULT($ARCH)
+
+AC_SUBST(LIB)
+AC_MSG_CHECKING(LIB)
+case $ac_sys_system in
+Linux*)
+  # Test if the compiler is 64bit
+  echo 'int i;' > conftest.$ac_ext
+  python_cv_cc_64bit_output=no
+  if AC_TRY_EVAL(ac_compile); then
+    case `/usr/bin/file conftest.$ac_objext` in
+    *"ELF 64"*)
+      python_cv_cc_64bit_output=yes
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+esac
+
+case $ARCH:$python_cv_cc_64bit_output in
+powerpc64:yes | s390x:yes | sparc64:yes | x86_64:yes)
+  LIB="lib64"
+  ;;
+x86_64:no)
+  LIB="libx32"
+  ;;
+*:*)
+  LIB="lib"
+  ;;
+esac
+AC_MSG_RESULT($LIB)
+
 
 AC_SUBST(LIBRARY)
 AC_MSG_CHECKING(LIBRARY)
--- Python-3.5.0/Include/pylifecycle.h~	2015-09-13 13:41:20.000000000 +0200
+++ Python-3.5.0/Include/pylifecycle.h	2015-09-13 20:08:24.017308537 +0200
@@ -65,6 +65,8 @@ int _Py_CheckPython3();
 /* In their own files */
 PyAPI_FUNC(const char *) Py_GetVersion(void);
 PyAPI_FUNC(const char *) Py_GetPlatform(void);
+PyAPI_FUNC(const char *) Py_GetArch(void);
+PyAPI_FUNC(const char *) Py_GetLib(void);
 PyAPI_FUNC(const char *) Py_GetCopyright(void);
 PyAPI_FUNC(const char *) Py_GetCompiler(void);
 PyAPI_FUNC(const char *) Py_GetBuildInfo(void);
--- Python-3.2.1.orig/Lib/distutils/command/install.py	2011-07-09 07:58:46.000000000 +0100
+++ Python-3.2.1/Lib/distutils/command/install.py	2011-07-12 22:20:12.000000000 +0100
@@ -19,6 +19,8 @@ from site import USER_BASE
 from site import USER_SITE
 HAS_USER_SITE = True
 
+libname = sys.lib
+
 WINDOWS_SCHEME = {
     'purelib': '$base/Lib/site-packages',
     'platlib': '$base/Lib/site-packages',
@@ -47,14 +49,14 @@
 INSTALL_SCHEMES = {
     'unix_prefix': {
         'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'platlib': '$platbase/'+libname+'/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
         'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'platlib': '$base/'+libname+'/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
--- Python-3.2.1.orig/Lib/distutils/sysconfig.py	2011-07-09 07:58:47.000000000 +0100
+++ Python-3.2.1/Lib/distutils/sysconfig.py	2011-07-12 22:20:12.000000000 +0100
@@ -124,8 +124,12 @@
         prefix = plat_specific and EXEC_PREFIX or PREFIX
 
     if os.name == "posix":
+        if plat_specific:
+            lib = sys.lib
+        else:
+            lib = 'lib'
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 lib, "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
--- Python-3.2.1.orig/Lib/distutils/tests/test_install.py	2011-07-09 07:58:47.000000000 +0100
+++ Python-3.2.1/Lib/distutils/tests/test_install.py	2011-07-12 22:20:12.000000000 +0100
@@ -49,8 +49,9 @@
             self.assertEqual(got, expected)
 
         libdir = os.path.join(destination, "lib", "python")
+        platlibdir =  os.path.join(destination, sys.lib, "python")
         check_path(cmd.install_lib, libdir)
-        check_path(cmd.install_platlib, libdir)
+        check_path(cmd.install_platlib, platlibdir)
         check_path(cmd.install_purelib, libdir)
         check_path(cmd.install_headers,
                    os.path.join(destination, "include", "python", "foopkg"))
--- Python-3.2.1.orig/Lib/site.py	2011-07-09 07:58:49.000000000 +0100
+++ Python-3.2.1/Lib/site.py	2011-07-12 22:20:12.000000000 +0100
@@ -304,12 +304,15 @@ def getsitepackages(prefixes=None):
         seen.add(prefix)
 
         if os.sep == '/':
-            sitepackages.append(os.path.join(prefix, "lib",
+            sitepackages.append(os.path.join(prefix, sys.lib,
                                         "python" + sys.version[:3],
                                         "site-packages"))
+            sitepackages.append(os.path.join(prefix, sys.lib, "site-python"))
+            if sys.lib != 'lib':
+                sitepackages.append(os.path.join(prefix, "lib", "python" + sys.version[:3], "site-packages"))
         else:
             sitepackages.append(prefix)
-            sitepackages.append(os.path.join(prefix, "lib", "site-packages"))
+            sitepackages.append(os.path.join(prefix, sys.lib, "site-packages"))
         if sys.platform == "darwin":
             # for framework builds *only* we add the standard Apple
             # locations.
--- Python-3.2.1.orig/Lib/sysconfig.py	2011-07-09 07:58:49.000000000 +0100
+++ Python-3.2.1/Lib/sysconfig.py	2011-07-12 22:20:12.000000000 +0100
@@ -21,10 +21,10 @@
 
 _INSTALL_SCHEMES = {
     'posix_prefix': {
-        'stdlib': '{installed_base}/lib/python{py_version_short}',
-        'platstdlib': '{platbase}/lib/python{py_version_short}',
+        'stdlib': '{installed_base}/' + sys.lib + '/python{py_version_short}',
+        'platstdlib': '{platbase}/' + sys.lib + '/python{py_version_short}',
         'purelib': '{base}/lib/python{py_version_short}/site-packages',
-        'platlib': '{platbase}/lib/python{py_version_short}/site-packages',
+        'platlib': '{platbase}/' + sys.lib + '/python{py_version_short}/site-packages',
         'include':
             '{installed_base}/include/python{py_version_short}{abiflags}',
         'platinclude':
@@ -33,10 +33,10 @@
         'data': '{base}',
         },
     'posix_home': {
-        'stdlib': '{installed_base}/lib/python',
-        'platstdlib': '{base}/lib/python',
+        'stdlib': '{installed_base}/' + sys.lib + '/python',
+        'platstdlib': '{base}/' + sys.lib + '/python',
         'purelib': '{base}/lib/python',
-        'platlib': '{base}/lib/python',
+        'platlib': '{base}/' + sys.lib + '/python',
         'include': '{installed_base}/include/python',
         'platinclude': '{installed_base}/include/python',
         'scripts': '{base}/bin',
--- Python-3.2.1.orig/Makefile.pre.in	2011-07-09 07:58:52.000000000 +0100
+++ Python-3.2.1/Makefile.pre.in	2011-07-12 22:20:12.000000000 +0100
@@ -90,6 +90,8 @@
 
 # Machine-dependent subdirectories
 MACHDEP=	@MACHDEP@
+LIB=		@LIB@
+ARCH=		@ARCH@
 
 # Install prefix for architecture-independent files
 prefix=		@prefix@
@@ -106,7 +108,7 @@
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
 CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+SCRIPTDIR=	$(prefix)/$(LIB)
 ABIFLAGS=	@ABIFLAGS@
 
 # Detailed destination directories
@@ -611,7 +613,7 @@
 Python/compile.o Python/symtable.o Python/ast.o: $(GRAMMAR_H) $(AST_H)
 
 Python/getplatform.o: $(srcdir)/Python/getplatform.c
-		$(CC) -c $(PY_CORE_CFLAGS) -DPLATFORM='"$(MACHDEP)"' -o $@ $(srcdir)/Python/getplatform.c
+		$(CC) -c $(PY_CORE_CFLAGS) -DPLATFORM='"$(MACHDEP)"' -DARCH='"$(ARCH)"' -DLIB='"$(LIB)"' -o $@ $(srcdir)/Python/getplatform.c
 
 Python/importdl.o: $(srcdir)/Python/importdl.c
 		$(CC) -c $(PY_CORE_CFLAGS) -I$(DLINCLDIR) -o $@ $(srcdir)/Python/importdl.c
--- Python-3.2.1.orig/Modules/getpath.c	2011-07-09 07:58:54.000000000 +0100
+++ Python-3.2.1/Modules/getpath.c	2011-07-12 22:21:48.000000000 +0100
@@ -121,9 +121,21 @@
 #define EXEC_PREFIX PREFIX
 #endif
 
+#ifndef LIB_PYTHON
+#if defined(__x86_64__) || (defined(__sparc__) && defined(__arch64__)) || defined(__powerpc64__) || defined(__s390x__)
+#if defined(__ILP32__)
+#define LIB_PYTHON "libx32/python"
+#else
+#define LIB_PYTHON "lib64/python"
+#endif
+#else
+#define LIB_PYTHON "lib/python"
+#endif
+#endif
+
 #ifndef PYTHONPATH
-#define PYTHONPATH PREFIX "/lib/python" VERSION ":" \
-              EXEC_PREFIX "/lib/python" VERSION "/lib-dynload"
+#define PYTHONPATH PREFIX "/" LIB_PYTHON VERSION ":" \
+              EXEC_PREFIX "/" LIB_PYTHON VERSION "/lib-dynload:"
 #endif
 
 #ifndef LANDMARK
@@ -502,7 +514,7 @@ calculate_path(void)
     _pythonpath = Py_DecodeLocale(PYTHONPATH, NULL);
     _prefix = Py_DecodeLocale(PREFIX, NULL);
     _exec_prefix = Py_DecodeLocale(EXEC_PREFIX, NULL);
-    lib_python = Py_DecodeLocale("lib/python" VERSION, NULL);
+    lib_python = Py_DecodeLocale(LIB_PYTHON VERSION, NULL);
 
     if (!_pythonpath || !_prefix || !_exec_prefix || !lib_python) {
         Py_FatalError(
--- Python-3.2.1.orig/Python/getplatform.c	2011-07-09 07:58:56.000000000 +0100
+++ Python-3.2.1/Python/getplatform.c	2011-07-12 22:20:12.000000000 +0100
@@ -10,3 +10,23 @@
 {
 	return PLATFORM;
 }
+
+#ifndef ARCH
+#define ARCH "unknown"
+#endif
+
+const char *
+Py_GetArch(void)
+{
+	return ARCH;
+}
+
+#ifndef LIB
+#define LIB "lib"
+#endif
+
+const char *
+Py_GetLib(void)
+{
+	return LIB;
+}
--- Python-3.2.1.orig/Python/sysmodule.c	2011-07-09 07:58:56.000000000 +0100
+++ Python-3.2.1/Python/sysmodule.c	2011-07-12 22:20:12.000000000 +0100
@@ -1560,6 +1560,10 @@
                         PyUnicode_FromString(Py_GetCopyright()));
     SET_SYS_FROM_STRING("platform",
                         PyUnicode_FromString(Py_GetPlatform()));
+    SET_SYS_FROM_STRING("arch",
+                        PyUnicode_FromString(Py_GetArch()));
+    SET_SYS_FROM_STRING("lib",
+                        PyUnicode_FromString(Py_GetLib()));
     SET_SYS_FROM_STRING("executable",
                         PyUnicode_FromWideChar(
                                Py_GetProgramFullPath(), -1));
--- Python-3.2.1.orig/setup.py	2011-07-09 07:58:56.000000000 +0100
+++ Python-3.2.1/setup.py	2011-07-12 22:20:12.000000000 +0100
@@ -516,8 +516,7 @@
         # be assumed that no additional -I,-L directives are needed.
         if not cross_compiling:
             lib_dirs = self.compiler.library_dirs + [
-                '/lib64', '/usr/lib64',
-                '/lib', '/usr/lib',
+                '/' + sys.lib, '/usr/' + sys.lib
                 ]
             inc_dirs = self.compiler.include_dirs + ['/usr/include']
         exts = []
@@ -643,11 +642,11 @@
             elif curses_library:
                 readline_libs.append(curses_library)
             elif self.compiler.find_library_file(lib_dirs +
-                                                     ['/usr/lib/termcap'],
+                                                     ['/usr/' + sys.lib + '/termcap'],
                                                      'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
+                                   library_dirs=['/usr/' + sys.lib + '/termcap'],
                                    extra_link_args=readline_extra_link_args,
                                    libraries=readline_libs) )
         else:
